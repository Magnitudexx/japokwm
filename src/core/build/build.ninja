# This is the build file for project "juliawm"
# It is autogenerated by the Meson build system.
# Do not edit by hand.

ninja_required_version = 1.7.1

# Rules for compiling.

rule c_COMPILER
 command = cc $ARGS -MD -MQ $out -MF $DEPFILE -o $out -c $in
 deps = gcc
 depfile = $DEPFILE_UNQUOTED
 description = Compiling C object $out

# Rules for linking.

rule c_LINKER
 command = cc $ARGS -o $out $in $LINK_ARGS
 description = Linking target $out

rule SHSYM
 command = /usr/bin/meson --internal symbolextractor /home/jakob/git/juliawm/src/core/build $in $IMPLIB $out $CROSS
 description = Generating symbol file $out
 restat = 1

# Other rules

rule CUSTOM_COMMAND
 command = $COMMAND
 description = $DESC
 restat = 1

rule REGENERATE_BUILD
 command = /usr/bin/meson --internal regenerate /home/jakob/git/juliawm/src/core /home/jakob/git/juliawm/src/core/build --backend ninja
 description = Regenerating build files.
 generator = 1

# Phony build target, always out of date

build PHONY: phony 

# Build rules for targets

build src/libjuliawm.so.p/client.c.o: c_COMPILER ../src/client.c
 DEPFILE = src/libjuliawm.so.p/client.c.o.d
 DEPFILE_UNQUOTED = src/libjuliawm.so.p/client.c.o.d
 ARGS = -Isrc/libjuliawm.so.p -Isrc -I../src -I../include/core -I/usr/include/libdrm -I/usr/include/pixman-1 -I/usr/include/cairo -I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include -I/usr/include/freetype2 -I/usr/include/libpng16 -I/usr/include/harfbuzz -fdiagnostics-color=always -pipe -D_FILE_OFFSET_BITS=64 -Wall -Winvalid-pch -std=c11 -g -DWLR_USE_UNSTABLE -Wl,--start-group -ljulia -Wl,--end-group -fPIC

build src/libjuliawm.so.p/parseConfig.c.o: c_COMPILER ../src/parseConfig.c
 DEPFILE = src/libjuliawm.so.p/parseConfig.c.o.d
 DEPFILE_UNQUOTED = src/libjuliawm.so.p/parseConfig.c.o.d
 ARGS = -Isrc/libjuliawm.so.p -Isrc -I../src -I../include/core -I/usr/include/libdrm -I/usr/include/pixman-1 -I/usr/include/cairo -I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include -I/usr/include/freetype2 -I/usr/include/libpng16 -I/usr/include/harfbuzz -fdiagnostics-color=always -pipe -D_FILE_OFFSET_BITS=64 -Wall -Winvalid-pch -std=c11 -g -DWLR_USE_UNSTABLE -Wl,--start-group -ljulia -Wl,--end-group -fPIC

build src/libjuliawm.so.p/juliawm.c.o: c_COMPILER ../src/juliawm.c
 DEPFILE = src/libjuliawm.so.p/juliawm.c.o.d
 DEPFILE_UNQUOTED = src/libjuliawm.so.p/juliawm.c.o.d
 ARGS = -Isrc/libjuliawm.so.p -Isrc -I../src -I../include/core -I/usr/include/libdrm -I/usr/include/pixman-1 -I/usr/include/cairo -I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include -I/usr/include/freetype2 -I/usr/include/libpng16 -I/usr/include/harfbuzz -fdiagnostics-color=always -pipe -D_FILE_OFFSET_BITS=64 -Wall -Winvalid-pch -std=c11 -g -DWLR_USE_UNSTABLE -Wl,--start-group -ljulia -Wl,--end-group -fPIC

build src/libjuliawm.so.p/coreUtils.c.o: c_COMPILER ../src/coreUtils.c
 DEPFILE = src/libjuliawm.so.p/coreUtils.c.o.d
 DEPFILE_UNQUOTED = src/libjuliawm.so.p/coreUtils.c.o.d
 ARGS = -Isrc/libjuliawm.so.p -Isrc -I../src -I../include/core -I/usr/include/libdrm -I/usr/include/pixman-1 -I/usr/include/cairo -I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include -I/usr/include/freetype2 -I/usr/include/libpng16 -I/usr/include/harfbuzz -fdiagnostics-color=always -pipe -D_FILE_OFFSET_BITS=64 -Wall -Winvalid-pch -std=c11 -g -DWLR_USE_UNSTABLE -Wl,--start-group -ljulia -Wl,--end-group -fPIC

build src/libjuliawm.so.p/xdg-shell-protocol.c.o: c_COMPILER ../src/xdg-shell-protocol.c
 DEPFILE = src/libjuliawm.so.p/xdg-shell-protocol.c.o.d
 DEPFILE_UNQUOTED = src/libjuliawm.so.p/xdg-shell-protocol.c.o.d
 ARGS = -Isrc/libjuliawm.so.p -Isrc -I../src -I../include/core -I/usr/include/libdrm -I/usr/include/pixman-1 -I/usr/include/cairo -I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include -I/usr/include/freetype2 -I/usr/include/libpng16 -I/usr/include/harfbuzz -fdiagnostics-color=always -pipe -D_FILE_OFFSET_BITS=64 -Wall -Winvalid-pch -std=c11 -g -DWLR_USE_UNSTABLE -Wl,--start-group -ljulia -Wl,--end-group -fPIC

build src/libjuliawm.so.p/parseConfigUtils.c.o: c_COMPILER ../src/parseConfigUtils.c
 DEPFILE = src/libjuliawm.so.p/parseConfigUtils.c.o.d
 DEPFILE_UNQUOTED = src/libjuliawm.so.p/parseConfigUtils.c.o.d
 ARGS = -Isrc/libjuliawm.so.p -Isrc -I../src -I../include/core -I/usr/include/libdrm -I/usr/include/pixman-1 -I/usr/include/cairo -I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include -I/usr/include/freetype2 -I/usr/include/libpng16 -I/usr/include/harfbuzz -fdiagnostics-color=always -pipe -D_FILE_OFFSET_BITS=64 -Wall -Winvalid-pch -std=c11 -g -DWLR_USE_UNSTABLE -Wl,--start-group -ljulia -Wl,--end-group -fPIC

build src/libjuliawm.so.p/debug.c.o: c_COMPILER ../src/debug.c
 DEPFILE = src/libjuliawm.so.p/debug.c.o.d
 DEPFILE_UNQUOTED = src/libjuliawm.so.p/debug.c.o.d
 ARGS = -Isrc/libjuliawm.so.p -Isrc -I../src -I../include/core -I/usr/include/libdrm -I/usr/include/pixman-1 -I/usr/include/cairo -I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include -I/usr/include/freetype2 -I/usr/include/libpng16 -I/usr/include/harfbuzz -fdiagnostics-color=always -pipe -D_FILE_OFFSET_BITS=64 -Wall -Winvalid-pch -std=c11 -g -DWLR_USE_UNSTABLE -Wl,--start-group -ljulia -Wl,--end-group -fPIC

build src/libjuliawm.so.p/libjuliawm.so.symbols: SHSYM src/libjuliawm.so
 IMPLIB = src/libjuliawm.so

build src/libjuliawm.so: c_LINKER src/libjuliawm.so.p/client.c.o src/libjuliawm.so.p/parseConfig.c.o src/libjuliawm.so.p/juliawm.c.o src/libjuliawm.so.p/coreUtils.c.o src/libjuliawm.so.p/xdg-shell-protocol.c.o src/libjuliawm.so.p/parseConfigUtils.c.o src/libjuliawm.so.p/debug.c.o | /usr/lib/libwayland-server.so /usr/lib/libwlroots.so /usr/lib/libcairo.so /usr/lib/libxcb.so /usr/lib/libxkbcommon.so
 LINK_ARGS = -Wl,--as-needed -Wl,--no-undefined -shared -fPIC -Wl,--start-group -Wl,-soname,libjuliawm.so /usr/lib/libwayland-server.so /usr/lib/libwlroots.so /usr/lib/libcairo.so /usr/lib/libxcb.so /usr/lib/libxkbcommon.so -Wl,--end-group

# Test rules

build meson-test: CUSTOM_COMMAND all PHONY
 COMMAND = /usr/bin/meson test --no-rebuild --print-errorlogs
 DESC = Running$ all$ tests.
 pool = console

build test: phony meson-test

build meson-benchmark: CUSTOM_COMMAND all PHONY
 COMMAND = /usr/bin/meson test --benchmark --logbase benchmarklog --num-processes=1 --no-rebuild
 DESC = Running$ benchmark$ suite.
 pool = console

build benchmark: phony meson-benchmark

# Install rules

build meson-install: CUSTOM_COMMAND PHONY | all
 DESC = Installing$ files.
 COMMAND = /usr/bin/meson install --no-rebuild
 pool = console

build install: phony meson-install

build meson-dist: CUSTOM_COMMAND PHONY
 DESC = Creating$ source$ packages
 COMMAND = /usr/bin/meson dist
 pool = console

build dist: phony meson-dist

# Suffix

build meson-scan-build: CUSTOM_COMMAND PHONY
 COMMAND = /usr/bin/meson --internal scanbuild /home/jakob/git/juliawm/src/core /home/jakob/git/juliawm/src/core/build /usr/bin/meson
 pool = console

build scan-build: phony meson-scan-build

build meson-ctags: CUSTOM_COMMAND PHONY
 COMMAND = /usr/bin/meson --internal tags ctags /home/jakob/git/juliawm/src/core
 pool = console

build ctags: phony meson-ctags

build meson-uninstall: CUSTOM_COMMAND PHONY
 COMMAND = /usr/bin/meson --internal uninstall
 pool = console

build uninstall: phony meson-uninstall

build all: phony src/libjuliawm.so

build clean: phony meson-clean

build meson-clean: CUSTOM_COMMAND PHONY
 COMMAND = /usr/bin/ninja -t clean
 description = Cleaning

build build.ninja: REGENERATE_BUILD ../meson.build ../src/meson.build meson-private/coredata.dat
 pool = console

build reconfigure: REGENERATE_BUILD PHONY
 pool = console

build ../meson.build ../src/meson.build meson-private/coredata.dat: phony 

default all

